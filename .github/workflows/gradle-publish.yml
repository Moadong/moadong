# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Java CD with Gradle

on:
  push:
    branches: ["develop/be", "main", "CICD/#9-apply_cicd"]
    paths: ["backend/**"]

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GCE_SA_KEY }}
        project_id: ${{ secrets.GCE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Build the Docker image
    - name: Build
      run: |-
        docker build --tag "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
    - name: Deploy
      run: |-
        gcloud compute instances update-container "$GCE_INSTANCE" \
          --zone "$GCE_INSTANCE_ZONE" \
          --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write

#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up JDK 17
#       uses: actions/setup-java@v4
#       with:
#         java-version: '17'
#         distribution: 'temurin'
        
#     - name: Setup Gradle
#       uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

#     - name: make application-prod.properties
#       run: | 
#         cd ./backend/src/main/resources
#         touch ./application-prod.properties
#         echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.properties

#     - name: Grant execute permission for gradlew
#       run: chmod +x ./backend/gradlew

#     - name: Build with Gradle
#       run: |
#         cd backend
#         ./gradlew clean build -x test

#     - name: Docker build
#       run: |
#         cd backend
#         docker login -u ${{ secrets.SERVER_DOCKER_USERNAME }} -p ${{ secrets.SERVER_DOCKER_PASSWORD }}
#         docker build -t app .
#         docker tag app ${{ secrets.SERVER_DOCKER_USERNAME }}/moadong_be:latest
#         docker push ${{ secrets.SERVER_DOCKER_USERNAME }}/moadong_be:latest
